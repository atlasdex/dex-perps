/// <reference types="node" />
import { PublicKey, TransactionInstruction, Connection, Keypair, AccountInfo } from "@solana/web3.js";
import BN from "bn.js";
export declare class Numberu64 extends BN {
    /**
     * Convert to Buffer representation
     */
    toBuffer(): Buffer;
    /**
     * Construct a Numberu64 from Buffer representation
     */
    static fromBuffer(buffer: any): any;
}
export declare const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey;
export declare const createAssociatedTokenAccount: (fundingAddress: PublicKey, walletAddress: PublicKey, splTokenMintAddress: PublicKey) => Promise<TransactionInstruction>;
export declare function findAssociatedTokenAddress(walletAddress: PublicKey, tokenMintAddress: PublicKey): Promise<PublicKey>;
export declare const signAndSendTransactionInstructions: (connection: Connection, signers: Array<Keypair>, feePayer: Keypair, txInstructions: Array<TransactionInstruction>) => Promise<string>;
export declare function getFilteredProgramAccounts(connection: Connection, programId: PublicKey, filters: any): Promise<{
    publicKey: PublicKey;
    accountInfo: AccountInfo<Buffer>;
}[]>;
export declare function assert(cond: boolean, msg: string): void;
