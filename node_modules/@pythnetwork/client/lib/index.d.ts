import { PublicKey } from '@solana/web3.js';
import { Buffer } from 'buffer';
export declare const Magic = 2712847316;
export declare const Version2 = 2;
export declare const Version = 2;
export declare const PriceStatus: string[];
export declare const CorpAction: string[];
export declare const PriceType: string[];
export declare const DeriveType: string[];
export interface Base {
    magic: number;
    version: number;
    type: number;
    size: number;
}
export interface MappingData extends Base {
    nextMappingAccount: PublicKey | null;
    productAccountKeys: PublicKey[];
}
export interface Product {
    symbol: string;
    asset_type: string;
    quote_currency: string;
    tenor: string;
    [index: string]: string;
}
export interface ProductData extends Base {
    priceAccountKey: PublicKey;
    product: Product;
}
export interface Price {
    priceComponent: bigint;
    price: number;
    confidenceComponent: bigint;
    confidence: number;
    status: number;
    corporateAction: number;
    publishSlot: bigint;
}
export interface PriceComponent {
    publisher: PublicKey | null;
    aggregate: Price;
    latest: Price;
}
export interface Ema {
    valueComponent: bigint;
    value: number;
    numerator: bigint;
    denominator: bigint;
}
export interface PriceData extends Base, Price {
    priceType: number;
    exponent: number;
    numComponentPrices: number;
    numQuoters: number;
    lastSlot: bigint;
    validSlot: bigint;
    twap: Ema;
    twac: Ema;
    drv1Component: bigint;
    drv1: number;
    drv2Component: bigint;
    drv2: number;
    productAccountKey: PublicKey;
    nextPriceAccountKey: PublicKey | null;
    previousSlot: bigint;
    previousPriceComponent: bigint;
    previousPrice: number;
    previousConfidenceComponent: bigint;
    previousConfidence: number;
    drv3Component: bigint;
    drv3: number;
    priceComponents: PriceComponent[];
}
export declare const parseMappingData: (data: Buffer) => MappingData;
export declare const parseProductData: (data: Buffer) => ProductData;
export declare const parsePriceData: (data: Buffer) => PriceData;
